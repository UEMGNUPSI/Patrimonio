package view;

import dao.HistoricoAcaoDAO;
import dao.UnidadeDAO;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.HistoricoAcaoM;
import model.UnidadeM;
import model.UsuarioM;
import util.LimiteDigitos;

/**
 * UNIVERSIDADE DO ESTADO DE MINAS GERAIS - Unidade Frutal
 * @author NUPSI - Núcle de Práticas em Sistemas de Informação
 */
public class UnidadeView extends javax.swing.JInternalFrame {
    public UnidadeView(UsuarioM usuarioAtivo) {
        unidadeDAO = new UnidadeDAO();
        listaUnidade = new ArrayList<>();
        this.usuarioAtivo = usuarioAtivo;
        initComponents();
        this.setVisible(true);
        atualizaTabelaUnidade();
        tfdEmail.setDocument(new LimiteDigitos(45));
        tfdEndereco.setDocument(new LimiteDigitos(45));
        tfdNome.setDocument(new LimiteDigitos(45));
        tfdTelefone.setDocument(new LimiteDigitos(45));

        
    }

    UnidadeM unidade;
    UnidadeDAO unidadeDAO;
    List<UnidadeM> listaUnidade;
    
    int idHistorico;
    String acao;
    String descricaoHistorico;
    UsuarioM usuarioAtivo;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbeUnidade = new javax.swing.JTable();
        pnlUnidade = new javax.swing.JPanel();
        lblEmail = new javax.swing.JLabel();
        tfdEmail = new javax.swing.JTextField();
        btnAlterarUnidade = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        lblIDUnidade = new javax.swing.JLabel();
        tfdID = new javax.swing.JTextField();
        lblNomeUnidade = new javax.swing.JLabel();
        tfdNome = new javax.swing.JTextField();
        lblTelefoneUnidade = new javax.swing.JLabel();
        tfdTelefone = new javax.swing.JTextField();
        lblEnderecoUnidade = new javax.swing.JLabel();
        tfdEndereco = new javax.swing.JTextField();
        btnNovo = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnExcluirUnidade = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastrar Unidade");

        tbeUnidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Telefone", "Endereço", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbeUnidade.getTableHeader().setReorderingAllowed(false);
        tbeUnidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbeUnidadeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbeUnidade);

        lblEmail.setText("E-mail");

        tfdEmail.setEnabled(false);
        tfdEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfdEmailKeyPressed(evt);
            }
        });

        btnAlterarUnidade.setText("Alterar");
        btnAlterarUnidade.setEnabled(false);
        btnAlterarUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarUnidadeActionPerformed(evt);
            }
        });
        btnAlterarUnidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAlterarUnidadeKeyPressed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        btnSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSalvarKeyPressed(evt);
            }
        });

        lblIDUnidade.setText("ID");

        tfdID.setEditable(false);
        tfdID.setEnabled(false);

        lblNomeUnidade.setText("Nome ");

        tfdNome.setEnabled(false);
        tfdNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfdNomeActionPerformed(evt);
            }
        });
        tfdNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfdNomeKeyPressed(evt);
            }
        });

        lblTelefoneUnidade.setText("Telefone ");

        tfdTelefone.setEnabled(false);
        tfdTelefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfdTelefoneActionPerformed(evt);
            }
        });
        tfdTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfdTelefoneKeyPressed(evt);
            }
        });

        lblEnderecoUnidade.setText("Endereço");

        tfdEndereco.setEnabled(false);
        tfdEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfdEnderecoActionPerformed(evt);
            }
        });
        tfdEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfdEnderecoKeyPressed(evt);
            }
        });

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        btnNovo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnNovoKeyPressed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        btnCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCancelarKeyPressed(evt);
            }
        });

        btnExcluirUnidade.setText("Excluir");
        btnExcluirUnidade.setEnabled(false);
        btnExcluirUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirUnidadeActionPerformed(evt);
            }
        });
        btnExcluirUnidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnExcluirUnidadeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlUnidadeLayout = new javax.swing.GroupLayout(pnlUnidade);
        pnlUnidade.setLayout(pnlUnidadeLayout);
        pnlUnidadeLayout.setHorizontalGroup(
            pnlUnidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUnidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUnidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUnidadeLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(lblIDUnidade)
                        .addGap(73, 73, 73))
                    .addGroup(pnlUnidadeLayout.createSequentialGroup()
                        .addGroup(pnlUnidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfdNome)
                            .addComponent(tfdEndereco)
                            .addComponent(tfdTelefone)
                            .addComponent(tfdEmail)
                            .addGroup(pnlUnidadeLayout.createSequentialGroup()
                                .addGroup(pnlUnidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmail)
                                    .addComponent(lblEnderecoUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfdID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNomeUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblTelefoneUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlUnidadeLayout.createSequentialGroup()
                                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAlterarUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExcluirUnidade, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        pnlUnidadeLayout.setVerticalGroup(
            pnlUnidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUnidadeLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lblIDUnidade)
                .addGap(8, 8, 8)
                .addComponent(tfdID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNomeUnidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfdNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTelefoneUnidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfdTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEnderecoUnidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfdEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfdEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUnidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnAlterarUnidade)
                    .addComponent(btnNovo)
                    .addComponent(btnCancelar)
                    .addComponent(btnExcluirUnidade))
                .addGap(0, 16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 782, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbeUnidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbeUnidadeMouseClicked
        tfdID.setText(tbeUnidade.getValueAt(tbeUnidade.getSelectedRow(), 0).toString());
        tfdNome.setText(tbeUnidade.getValueAt(tbeUnidade.getSelectedRow(), 1).toString());
        tfdTelefone.setText(tbeUnidade.getValueAt(tbeUnidade.getSelectedRow(), 2).toString());
        tfdEndereco.setText(tbeUnidade.getValueAt(tbeUnidade.getSelectedRow(), 3).toString());
        tfdEmail.setText(tbeUnidade.getValueAt(tbeUnidade.getSelectedRow(), 4).toString());
        preparaSelecaoTabela();
    }//GEN-LAST:event_tbeUnidadeMouseClicked

    private void btnExcluirUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirUnidadeActionPerformed
        if (tfdID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecione uma Unidade", "Erro", JOptionPane.WARNING_MESSAGE);
        } else {
            unidade = new UnidadeM();
            unidade.setId(Integer.parseInt(tfdID.getText()));
            unidade.setNome(tfdNome.getText());
            int confirma = JOptionPane.showConfirmDialog(null, "Deseja Excluir: " + tfdNome.getText() + " ?");
            if (confirma == 0) {
                try {
                    acao = "Excluir Unidade";
                    idHistorico = unidade.getId();
                    descricaoHistorico = unidade.getNome();
                    salvaHistorico();
                    unidadeDAO.excluir(unidade);
                } catch (SQLException ex) {
                    Logger.getLogger(OrgaoView.class.getName()).log(Level.SEVERE, null, ex);
                    if (ex.getErrorCode() == 1451) {
                        JOptionPane.showMessageDialog(null, "Impossível excluir essa unidade, ela já possui blocos cadastrados!", "Erro", JOptionPane.WARNING_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.WARNING_MESSAGE);
                    }
                }

            }
        }
        LimpaCamposUnidade();
        atualizaTabelaUnidade();
        preparaExcluir();
    }//GEN-LAST:event_btnExcluirUnidadeActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        LimpaCamposUnidade();
        preparaSalvareCancelar();
        desativaCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        
        LimpaCamposUnidade();
        preparaNovo();
        ativaCampos();
        tfdNome.requestFocusInWindow();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void tfdEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfdEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdEnderecoActionPerformed

    private void tfdTelefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfdTelefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdTelefoneActionPerformed

    private void tfdNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfdNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdNomeActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (tfdNome.getText().isEmpty() || tfdEmail.getText().isEmpty() || tfdEndereco.getText().isEmpty() || tfdTelefone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Prencha todos os campos.", "Erro", JOptionPane.WARNING_MESSAGE);
            tfdNome.requestFocusInWindow();
        } else if (tfdID.getText().isEmpty()) {
            unidade = new UnidadeM();
            unidade.setNome(tfdNome.getText());
            unidade.setTelefone(tfdTelefone.getText());
            unidade.setEndereco(tfdEndereco.getText());
            unidade.setEmail(tfdEmail.getText());
            try {
                idHistorico = unidadeDAO.salvar(unidade);
                acao = "Novo Unidade";
                descricaoHistorico = unidade.getNome();
                salvaHistorico();
                JOptionPane.showMessageDialog(null, "Gravado com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                atualizaTabelaUnidade();
                preparaSalvareCancelar();
                desativaCampos();
                LimpaCamposUnidade();
            } catch (SQLException ex) {
                Logger.getLogger(OrgaoView.class.getName()).log(Level.SEVERE, null, ex);
                if (ex.getErrorCode() == 1062) {
                    JOptionPane.showMessageDialog(null, "Unidade já existente.", "Erro", JOptionPane.WARNING_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        }else {
            if (tfdID.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, " Selecione uma Unidade!", "Erro", JOptionPane.WARNING_MESSAGE);
            } else {
                unidade = new UnidadeM();
                unidade.setId(Integer.parseInt(tfdID.getText()));
                unidade.setNome(tfdNome.getText());
                unidade.setTelefone(tfdTelefone.getText());
                unidade.setEndereco(tfdEndereco.getText());
                unidade.setEmail(tfdEmail.getText());
                try {
                    idHistorico = unidade.getId();
                    acao = "Alterar Unidade";
                    descricaoHistorico = unidade.getNome();
                    salvaHistorico();
                    unidadeDAO.alterar(unidade);
                    JOptionPane.showMessageDialog(null, "Alterado com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    preparaSalvareCancelar();
                    LimpaCamposUnidade();
                    desativaCampos();
                } catch (SQLException ex){
                    if (ex.getErrorCode() == 1062) {
                        JOptionPane.showMessageDialog(null, "Unidade já existente.", "Erro", JOptionPane.WARNING_MESSAGE);

                    } else {
                        Logger.getLogger(OrgaoView.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        }
        atualizaTabelaUnidade();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnAlterarUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarUnidadeActionPerformed
        preparaAlterar();
        ativaCampos();
    }//GEN-LAST:event_btnAlterarUnidadeActionPerformed

    private void tfdNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdNomeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tfdTelefone.requestFocusInWindow();
        }
    }//GEN-LAST:event_tfdNomeKeyPressed

    private void tfdTelefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdTelefoneKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tfdEndereco.requestFocusInWindow();
        }
    }//GEN-LAST:event_tfdTelefoneKeyPressed

    private void tfdEnderecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdEnderecoKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tfdEmail.requestFocusInWindow();
        }
    }//GEN-LAST:event_tfdEnderecoKeyPressed

    private void tfdEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfdEmailKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnSalvar.requestFocusInWindow();
        }
    }//GEN-LAST:event_tfdEmailKeyPressed

    private void btnSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSalvarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (tfdNome.getText().isEmpty() || tfdEmail.getText().isEmpty() || tfdEndereco.getText().isEmpty() || tfdTelefone.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Prencha todos os campos.", "Erro", JOptionPane.WARNING_MESSAGE);
            tfdNome.requestFocusInWindow();
            } else if (tfdID.getText().isEmpty()) {
                unidade = new UnidadeM();
                unidade.setNome(tfdNome.getText());
                unidade.setTelefone(tfdTelefone.getText());
                unidade.setEndereco(tfdEndereco.getText());
                unidade.setEmail(tfdEmail.getText());
                try {
                    idHistorico = unidadeDAO.salvar(unidade);
                    acao = "Novo Unidade";
                    descricaoHistorico = unidade.getNome();
                    salvaHistorico();
                    JOptionPane.showMessageDialog(null, "Gravado com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    atualizaTabelaUnidade();
                    preparaSalvareCancelar();
                    desativaCampos();
                    LimpaCamposUnidade();
                } catch (SQLException ex) {
                    Logger.getLogger(OrgaoView.class.getName()).log(Level.SEVERE, null, ex);
                    if (ex.getErrorCode() == 1062) {
                        JOptionPane.showMessageDialog(null, "Unidade já existente.", "Erro", JOptionPane.WARNING_MESSAGE);

                    } else {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                }
            }else {
                if (tfdID.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, " Selecione uma Unidade!", "Erro", JOptionPane.WARNING_MESSAGE);
                } else {
                    unidade = new UnidadeM();
                    unidade.setId(Integer.parseInt(tfdID.getText()));
                    unidade.setNome(tfdNome.getText());
                    unidade.setTelefone(tfdTelefone.getText());
                    unidade.setEndereco(tfdEndereco.getText());
                    unidade.setEmail(tfdEmail.getText());
                    try {
                        idHistorico = unidade.getId();
                        acao = "Alterar Unidade";
                        descricaoHistorico = unidade.getNome();
                        salvaHistorico();
                        unidadeDAO.alterar(unidade);
                        JOptionPane.showMessageDialog(null, "Alterado com Sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                        preparaSalvareCancelar();
                        LimpaCamposUnidade();
                        desativaCampos();
                    } catch (SQLException ex){
                        if (ex.getErrorCode() == 1062) {
                            JOptionPane.showMessageDialog(null, "Unidade já existente.", "Erro", JOptionPane.WARNING_MESSAGE);

                        } else {
                            Logger.getLogger(OrgaoView.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                }
            }
            atualizaTabelaUnidade();
            
        }
    }//GEN-LAST:event_btnSalvarKeyPressed

    private void btnNovoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnNovoKeyPressed
        // TODO add your handling code here:
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            LimpaCamposUnidade();
            preparaNovo();
            ativaCampos();
            tfdNome.requestFocusInWindow();
        }
        
    }//GEN-LAST:event_btnNovoKeyPressed

    private void btnCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelarKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            LimpaCamposUnidade();
            preparaSalvareCancelar();
            desativaCampos();
        }
    }//GEN-LAST:event_btnCancelarKeyPressed

    private void btnAlterarUnidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAlterarUnidadeKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            preparaAlterar();
            ativaCampos();
        }
    }//GEN-LAST:event_btnAlterarUnidadeKeyPressed

    private void btnExcluirUnidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnExcluirUnidadeKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
             if (tfdID.getText().isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Selecione uma Unidade", "Erro", JOptionPane.WARNING_MESSAGE);
             } else {
                 unidade = new UnidadeM();
                 unidade.setId(Integer.parseInt(tfdID.getText()));
                 unidade.setNome(tfdNome.getText());
                 int confirma = JOptionPane.showConfirmDialog(null, "Deseja Excluir: " + tfdNome.getText() + " ?");
                 if (confirma == 0) {
                     try {
                         acao = "Excluir Unidade";
                         idHistorico = unidade.getId();
                         descricaoHistorico = unidade.getNome();
                         salvaHistorico();
                         unidadeDAO.excluir(unidade);
                     } catch (SQLException ex) {
                         Logger.getLogger(OrgaoView.class.getName()).log(Level.SEVERE, null, ex);
                         if (ex.getErrorCode() == 1451) {
                             JOptionPane.showMessageDialog(null, "Impossível excluir essa unidade, ela já possui blocos cadastrados!", "Erro", JOptionPane.WARNING_MESSAGE);
                         } else {
                             JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.WARNING_MESSAGE);
                         }
                     }

                 }
             }
             LimpaCamposUnidade();
             atualizaTabelaUnidade();
             preparaExcluir();
        }
    }//GEN-LAST:event_btnExcluirUnidadeKeyPressed
    
    public void salvaHistorico() throws SQLException{
        HistoricoAcaoM historico = new HistoricoAcaoM();
        historico.setIdObjeto(idHistorico);
        historico.setTipoObjeto(descricaoHistorico);
        historico.setAcao(acao);
        historico.setDataAcao(new Date(System.currentTimeMillis()));
        historico.setUsuario(usuarioAtivo);
        historico.setCodigo("");
        
        HistoricoAcaoDAO.salvar(historico);
    }
    
    public void LimpaCamposUnidade() {
        tfdID.setText("");
        tfdNome.setText("");
        tfdEmail.setText("");
        tfdEndereco.setText("");
        tfdTelefone.setText("");
    }

    public void atualizaTabelaUnidade() {
        try {
            listaUnidade = unidadeDAO.listaTodos();
        } catch (SQLException ex) {
            Logger.getLogger(OrgaoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        String dados[][] = new String[listaUnidade.size()][5];
        int i = 0;
        for (UnidadeM uni : listaUnidade) {
            dados[i][0] = String.valueOf(uni.getId());
            dados[i][1] = uni.getNome();
            dados[i][2] = uni.getTelefone();
            dados[i][3] = uni.getEndereco();
            dados[i][4] = uni.getEmail();
            i++;
        }
        String tituloColuna[] = {"ID", "Nome", "Telefone", "Endereço", "Email"};
        DefaultTableModel tabelaCliente = new DefaultTableModel();
        tabelaCliente.setDataVector(dados, tituloColuna);
        tbeUnidade.setModel(new DefaultTableModel(dados, tituloColuna) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tbeUnidade.getColumnModel().getColumn(0).setPreferredWidth(50);
        tbeUnidade.getColumnModel().getColumn(1).setPreferredWidth(200);
        tbeUnidade.getColumnModel().getColumn(2).setPreferredWidth(150);
        tbeUnidade.getColumnModel().getColumn(3).setPreferredWidth(300);
        tbeUnidade.getColumnModel().getColumn(4).setPreferredWidth(300);

        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        tbeUnidade.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        tbeUnidade.setRowHeight(25);
        tbeUnidade.updateUI();
    }
    
    
     // INÍCIO MÉTODOS DE CONTROLE DE BOTÕES 
    
    public void preparaNovo(){
        btnNovo.setEnabled(false);
        btnSalvar.setEnabled(true);
        btnCancelar.setEnabled(true);
        btnAlterarUnidade.setEnabled(false);
        btnExcluirUnidade.setEnabled(false);
        tbeUnidade.setEnabled(false);
        tbeUnidade.clearSelection();
    }
    
    public void ativaCampos(){
        tfdNome.setEnabled(true);
        tfdTelefone.setEnabled(true);
        tfdEndereco.setEnabled(true);
        tfdEmail.setEnabled(true);
    }
    
    public void preparaSalvareCancelar() {
        btnNovo.setEnabled(true);
        btnSalvar.setEnabled(false);
        btnCancelar.setEnabled(false);
        tbeUnidade.setEnabled(true);
    }
    
    public void desativaCampos() {
        tfdNome.setEnabled(false);
        tfdTelefone.setEnabled(false);
        tfdEndereco.setEnabled(false);
        tfdEmail.setEnabled(false);
    }
    
    public void preparaExcluir(){
        btnExcluirUnidade.setEnabled(false);
        btnAlterarUnidade.setEnabled(false);
    }
    
    public void preparaAlterar() {
        btnNovo.setEnabled(false);
        btnExcluirUnidade.setEnabled(false);
        btnAlterarUnidade.setEnabled(false);
        btnSalvar.setEnabled(true);
        btnCancelar.setEnabled(true);
        tbeUnidade.setEnabled(false);
        tbeUnidade.clearSelection();
    }
    
    public void preparaSelecaoTabela(){
        btnNovo.setEnabled(true);
        btnExcluirUnidade.setEnabled(true);
        btnAlterarUnidade.setEnabled(true);
    }
    
     // FIM MÉTODOS DE CONTROLE DE BOTÕES 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarUnidade;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluirUnidade;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEnderecoUnidade;
    private javax.swing.JLabel lblIDUnidade;
    private javax.swing.JLabel lblNomeUnidade;
    private javax.swing.JLabel lblTelefoneUnidade;
    private javax.swing.JPanel pnlUnidade;
    private javax.swing.JTable tbeUnidade;
    private javax.swing.JTextField tfdEmail;
    private javax.swing.JTextField tfdEndereco;
    private javax.swing.JTextField tfdID;
    private javax.swing.JTextField tfdNome;
    private javax.swing.JTextField tfdTelefone;
    // End of variables declaration//GEN-END:variables
}
